Net(DUDnCNN(
  (mse): MSELoss()
  (conv): ModuleList(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
    (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4))
    (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8))
    (5): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(16, 16), dilation=(16, 16))
    (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(32, 32), dilation=(32, 32))
    (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(64, 64), dilation=(64, 64))
    (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(128, 128), dilation=(128, 128))
    (9): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(128, 128), dilation=(128, 128))
    (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(64, 64), dilation=(64, 64))
    (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(32, 32), dilation=(32, 32))
    (12): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(16, 16), dilation=(16, 16))
    (13): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8))
    (14): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4))
    (15): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
    (16): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (17): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (bn): ModuleList(
    (0): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (1): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (4): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (5): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (6): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (7): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (8): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (9): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (10): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (11): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (12): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (13): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (14): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (15): BatchNorm2d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
  )
))
TrainSet(NoisyBSDSDataset(mode=train, image_size=(180, 180)))
ValSet(NoisyBSDSDataset(mode=test, image_size=(320, 320)))
Optimizer(Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-05
    maximize: False
    weight_decay: 0
))
StatsManager(DenoisingStatsManager)
BatchSize(4)
PerformValidationDuringTraining(True)

